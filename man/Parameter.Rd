% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argument_types.R
\name{Parameter}
\alias{Parameter}
\title{Parameter class}
\value{
Object of \code{\link{R6Class}} which represents a parameter.
}
\description{
This class defines parameters of \code{\link{Process}}. They store information about the type, format and
the pattern. Those classes are designed to not carry any value, because if the would it would be a 
\code{\link{Argument}}.
}
\details{
The parameters are parsed from the specific description and format of the JSON
objects returned for the parameters in processes. Find a list of openEO specific formats here: \url{https://open-eo.github.io/openeo-api/processes/#openeo-specific-formats}
}
\section{Methods}{

\describe{
 \item{\code{$new(name, description,required=FALSE)}}{}
 \item{\code{$isRequired()}}{return whether a parameter is mandatory or not}
 \item{\code{$getName}}{returns the name of a parameter as string}
 \item{\code{$setName(value)}}{sets the name of a parameter}
 \item{\code{$getPattern()}}{returns a string with the pattern of a parameter description}
 \item{\code{$setPattern(pattern)}}{sets the pattern (string) for a parameter}
 \item{\code{$matchesSchema(schema)}}{returns TRUE if the given schema - a list of the parsed openEO 
 API schema object - matches this parameters schema, which is used for finding the corresponding parameter}
 \item{\code{$isNullable()}}{returns TRUE if the parameter is allowed to be nullable, FALSE otherwise}
}
}

\section{Arguments}{

\describe{
  \item{\code{name}}{The name of a parameter}
  \item{\code{description}}{}
  \item{\code{required}}{logical - whether or not }
  \item{\code{value}}{In this case also the name of a parameter}
  \item{\code{pattern}}{the regexp as a string how to formulate the value}
  \item{\code{schema}}{the parsed schema object of a process parameter as a list}
}
}

