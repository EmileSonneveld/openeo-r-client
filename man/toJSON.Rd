% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities.R
\name{toJSON}
\alias{toJSON}
\alias{toJSON,Process-method}
\alias{toJSON,Graph-method}
\title{Wrapper for toJSON}
\usage{
\S4method{toJSON}{Process}(
  x,
  dataframe = c("rows", "columns", "values"),
  matrix = c("rowmajor", "columnmajor"),
  Date = c("ISO8601", "epoch"),
  POSIXt = c("string", "ISO8601", "epoch", "mongo"),
  factor = c("string", "integer"),
  complex = c("string", "list"),
  raw = c("base64", "hex", "mongo", "int", "js"),
  null = c("list", "null"),
  na = c("null", "string"),
  auto_unbox = FALSE,
  digits = 4,
  pretty = FALSE,
  force = FALSE,
  ...
)

\S4method{toJSON}{Graph}(
  x,
  dataframe = c("rows", "columns", "values"),
  matrix = c("rowmajor", "columnmajor"),
  Date = c("ISO8601", "epoch"),
  POSIXt = c("string", "ISO8601", "epoch", "mongo"),
  factor = c("string", "integer"),
  complex = c("string", "list"),
  raw = c("base64", "hex", "mongo", "int", "js"),
  null = c("list", "null"),
  na = c("null", "string"),
  auto_unbox = FALSE,
  digits = 4,
  pretty = FALSE,
  force = FALSE,
  ...
)
}
\arguments{
\item{x}{a Process or Graph object}

\item{...}{additional parameters that are passed to jsonlite::toJSON}
}
\value{
JSON string of the process as a character string
}
\description{
This function is intended to have a preconfigured toJSON function
to allow a user to visualize a process or graph in JSON. The JSON representation
of a process is the same as it will be sent to the back-end.
}
\examples{
\dontrun{
# node is a defined process node
process = as(node, "Process")
toJSON(process)

graph = process$getProcessGraph()
toJSON(graph)
}
}
